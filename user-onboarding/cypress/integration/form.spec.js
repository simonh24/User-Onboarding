describe("Form Inputs", () => {
    it("can navigate to the site", () => cy.visit("http://localhost:3000"))
    it("button is disabled", () => {
        cy.get("button.submit")
        .should("be.disabled")
    })
    it("can type a username", () => {
        cy.get("input[name='userName']")
        .type("Simon Huang")
        .should("have.value", "Simon Huang")
    })
    it("can type a password", () => {
        cy.get("input[name='userPassword']")
        .type("testpassword")
        .should("have.value", "testpassword")
    })
    it("can type an email", () => {
        cy.get("input[name='userEmail']")
        .type("test@email.com")
        .should("have.value", "test@email.com")
    })
    it("can click on tos", () => {
        cy.get("input[name='tos']")
        .check()
        .should("have.prop", "checked")
    })
    it("button be enabled", () => {
        cy.get("button")
        .should("not.be.disabled")
    })
})

describe("Form Validation", () => {
    it("validates username", () => {
        cy.visit("http://localhost:3000")
        cy.get("input[name='userName']")
        .type("abc")
        .should("have.value", "abc")
        cy.contains("The username must be at least four characters long.")
        cy.get("input[name='userName']")
        .type("d")
        .should("have.value", "abcd")
        cy.contains("The username must be at least four characters long.").should("not.exist")
    })
    it("sign up button is not enabled", () => {
        cy.get("button")
        .should("be.disabled")
    })
    it("validates password", () => {
        cy.get("input[name='userPassword']")
        .type("abc")
        .should("have.value", "abc")
        cy.contains("Your password must be at least 6 characers long.")
        cy.get("input[name='userPassword']")
        .type("def")
        .should("have.value", "abcdef")
        cy.contains("Your password must be at least 6 characers long.").should("not.exist")
    })
    it("sign up button is not enabled", () => {
        cy.get("button")
        .should("be.disabled")
    })
    it("validates email", () => {
        cy.get("input[name='userEmail']")
        .type("test")
        .should("have.value", "test")
        cy.contains("The email must be a valid email.")
        cy.get("input[name='userEmail']")
        .type("@email.com")
        .should("have.value", "test@email.com")
        cy.contains("The email must be a valid email.").should("not.exist")
    })
    it("sign up button is not enabled", () => {
        cy.get("button")
        .should("be.disabled")
    })
    it("validates tos", () => {
        cy.get("input[name='tos']")
        .check()
        .should("have.prop", "checked")
    })
    it("sign up button is not enabled", () => {
        cy.get("button")
        .should("not.be.disabled")
    })
    it("adds info to div", () => {
        cy.get("button")
        .click()
        cy.get("input[name='userName']")
        .should("have.value", "")
        cy.get("div h2")
        .contains("abcd")
        cy.get("div p:first")
        .contains("Password: abcdef")
        cy.get("div p:first").next()
        .contains("Email: test@email.com")
    })
})

describe("stretch test", () => {
    it("unchecking checkbox should not enable sign up", () => {
        cy.get("input[name='userName']")
        .type("Simon Huang")
        cy.get("input[name='userPassword']")
        .type("testpassword")
        cy.get("input[name='userEmail']")
        .type("test1@email.com")
        cy.get("input[name='tos']")
        .check()
        .uncheck()
        cy.get("button")
        .should("be.disabled")
        cy.get("input[name='tos']")
        .check()
        cy.get("button")
        .should("not.be.disabled")
        .click()
        cy.get("input[name='userName']")
        .should("have.value", "")
    })
})